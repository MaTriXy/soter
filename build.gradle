buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '3.0.1')
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.3'
    }
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'eu.appsatori.fatjar'

group projectGroup
version projectVersion

apply from: file("maven_push.gradle")

repositories {
    mavenCentral()
    jcenter()
}

configurations {
    jarjar
    jarjar.transitive = false
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7
	
dependencies {
    compile fileTree(dir: 'build/libs', include: ['*.jar'])

    jarjar 'com.amazonaws:aws-java-sdk-core:1.8.10.2'
    jarjar 'com.amazonaws:aws-java-sdk:1.8.10.2'
    jarjar 'org.apache.httpcomponents:httpcore:4.2'
    jarjar 'org.apache.httpcomponents:httpclient:4.2'

    compile gradleApi(), {
        ext.fatJarExclude = true
    }

    compile localGroovy(), {
        ext.fatJarExclude = true
    }

    compile 'com.android.tools.build:gradle:1.1.3', {
        ext.fatJarExclude = true
    }

    compile 'com.github.blazsolar.gradle:gradle-hipchat-plugin:0.2.0', {
        ext.fatJarExclude = true
    }

    compile 'org.ajoberstar:grgit:0.4.0', {
        ext.fatJarExclude = true
    }

    compile 'com.squareup.okhttp:okhttp:2.0.0', {
        ext.fatJarExclude = true
    }

    runtime 'org.codehaus.jackson:jackson-mapper-asl:1.9.13', {
        ext.fatJarExclude = true
    }

}

fatJar {
    exclude(
            "META-INF/*.SF",
            "META-INF/*.DSA",
            "META-INF/*.RSA",
    )
}

task resolveJarjar() << {

    for(File file : configurations.jarjar.files) {

        project.exec {
            workingDir project.projectDir.getAbsolutePath()
            ignoreExitValue true

            new File("build/libs").mkdirs();

//            if (Os.FAMILY_WINDOWS) {
//                commandLine 'cmd', '/c', 'java', '-jar', "config/jarjar/jarjar-1.4.jar", 'process', "config/jarjar/rules.txt", file.getAbsolutePath(), "lib/" + file.getName()
//            } else {
                commandLine 'java', '-jar', "config/jarjar/jarjar-1.4.jar", 'process', "config/jarjar/rule.txt", file.getAbsolutePath(), "build/libs/" + file.getName()
//            }
        }

    }

}
